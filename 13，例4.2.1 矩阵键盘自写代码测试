// 尝试代码后发现4个要点
//P3貌似既是输入口又是输出口，可以用P3=0xxx来给整个P3赋值，类似数码管P0=0xxx
//同时矩阵键盘的每个按键又能单独修改P3的某一位，以4×4对应过去
//这点非常奇怪，也就是不但可以用代码控制C52芯片，同时还能用矩阵键盘控制C52芯片，有点类似与编码中的代码RAM与控制台
//P3=0xfe,0xfe=11111110，对应P3从上至下实际是01111111，并且这个0111代表打开第一行
//P3=0xee.0xee=11101110，对应的P3从上至下就是01110111，前一个0111代表矩阵键盘第一行，后一个0111代表选中那行的第一个按键

#include <reg52.h>
#define uchar unsigned char
#define uint unsigned int
sbit dula = P2^6;
sbit wela = P2^7;
uchar code table[]={
0x3f,0x06,0x5b,0x4f,
0x66,0x6d,0x7d,0x07,
0x7f,0x6f,0x77,0x7c,
0x39,0x5e,0x79,0x71
};
void delayms(uint);
void display(uchar);
void matrixkeyscan();

void main(){
	P0 = 0;
	dula = 1;
	dula = 0;
	P0 = 0xc0;
	wela = 1;
	wela = 0;
	while(1){
	matrixkeyscan();
	}	
}

void delayms(uint xms){
	uint i,j;
	for(i=xms;i>0;i--){for(j=110;j>0;j--);}
	}
void display(uchar num){
	P0 = table[num];
	dula = 1;
	dula = 0;
}
void matrixkeyscan(){
	uchar key, temp;
	P3 = 0xfe;
	//temp = P3&0xff;
	if(P3==0xee){
		delayms(10);
		if(P3==0xee){
		key = 3;
		}
		while(!P3);
	}
	display(key);
	//switch(temp){
		//case 0xee:
			//delayms(10);
			//if(temp==0xee){
				//key = 3;
				//}
		//case 0xde:
		//case 0xbe:
		//case 0x7e:
	//}
}
